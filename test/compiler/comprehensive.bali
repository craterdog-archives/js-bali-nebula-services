{
    if a < b then {
        $a := b
        $b := c
        throw exception
    } else if a > 0 then {
        false
        $c := fibonacci(b)
        return c
    } else {
        $d := b.find($tag)
        (3, 4i)
        return
    } handle $exception matching [$type: $warning] with {
        $count := count + 1
        [
            $message: "Something not too serious happened."
            $exception: exception
        ]
    } handle $exception matching [$type: $moderate] with {
        $exception := [
            $message: "Something serious happened."
            $exception: exception
        ]
        throw exception
    } finish with {
        queue [foo, bar, baz, 5] on <bali:/#RSTMWSC0HFY00QJP37QD3JA533NLKPP5v3.1>
        publish [$type: $confirmation, $timestamp: now()]
    }
    outer: while (true) do {
        $foo := bar
        if foo then {
            break
        } else {
            with each $item in sequence do {
                select selection from $first do {
                    true
                } $second do {
                    false
                } else {
                    continue to outer
                } finish with {
                    $selectDone
                }
            } finish with {
                $innerDone
            }
        } finish with {
            $ifDone
        }
    } finish with {
        $outerDone
    }
}
