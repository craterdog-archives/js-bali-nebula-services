
1.IfStatement:
SKIP INSTRUCTION

1.1.IfCondition:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $less WITH 2 PARAMETERS
JUMP TO 1.2IfCondition ON FALSE

1.1.1.EvaluateStatement:
LOAD VARIABLE $b
STORE VARIABLE $a

1.1.2.EvaluateStatement:
LOAD VARIABLE $c
STORE VARIABLE $b

1.1.3.ThrowStatement:
LOAD VARIABLE $exception
STORE VARIABLE $_exception_
JUMP TO 1.1.4.BlockEnd

1.1.4.BlockEnd:
JUMP TO 1.FinalClause

1.2.IfCondition:
LOAD VARIABLE $a
LOAD LITERAL `0`
INVOKE INTRINSIC $more WITH 2 PARAMETERS
JUMP TO 1.3.ElseClause ON FALSE

1.2.1.EvaluateStatement:
LOAD LITERAL `false`
STORE VARIABLE $_result_

1.2.2.EvaluateStatement:
LOAD VARIABLE $type
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD VARIABLE $b
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
EXECUTE METHOD $fibonacci WITH PARAMETERS
STORE VARIABLE $c

1.2.3.ReturnStatement:
LOAD VARIABLE $c
STORE VARIABLE $_result_
JUMP TO 1.2.4.BlockEnd

1.2.4.BlockEnd:
JUMP TO 1.FinalClause

1.3.ElseClause:
SKIP INSTRUCTION

1.3.1.EvaluateStatement:
LOAD VARIABLE $b
STORE VARIABLE $_target_11
LOAD VARIABLE $_target_11
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_type_12
LOAD VARIABLE $_type_12
LOAD VARIABLE $_target_11
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD LITERAL `$tag`
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
EXECUTE METHOD $find WITH TARGET AND PARAMETERS
STORE VARIABLE $d

1.3.2.EvaluateStatement:
LOAD LITERAL `(3, 4i)`
STORE VARIABLE $_result_

1.3.3.ReturnStatement:
JUMP TO 1.3.4.BlockEnd

1.3.4.BlockEnd:
SKIP INSTRUCTION

1.ExceptionClauses:
LOAD VARIABLE $_exception_
JUMP TO 1.FinalClause ON NONE
LOAD VARIABLE $_exception_

1.4.ExceptionClause:
STORE VARIABLE $exception
LOAD VARIABLE $exception
LOAD LITERAL `1`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$type`
LOAD LITERAL `$warning`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
JUMP TO 1.4.ClauseEnd ON FALSE

1.4.1.EvaluateStatement:
LOAD VARIABLE $count
LOAD LITERAL `1`
INVOKE INTRINSIC $sum WITH 2 PARAMETERS
STORE VARIABLE $count

1.4.2.EvaluateStatement:
LOAD LITERAL `2`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$message`
LOAD LITERAL `"Something not too serious happened."`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
LOAD LITERAL `$exception`
LOAD VARIABLE $exception
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
STORE VARIABLE $_result_

1.4.3.BlockEnd:
LOAD LITERAL `none`
STORE VARIABLE $_exception_

1.4.ClauseEnd:
LOAD VARIABLE $_exception_
JUMP TO 1.FinalClause ON NONE
LOAD VARIABLE $_exception_

1.5.ExceptionClause:
STORE VARIABLE $exception
LOAD VARIABLE $exception
LOAD LITERAL `1`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$type`
LOAD LITERAL `$moderate`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
JUMP TO 1.5.ClauseEnd ON FALSE

1.5.1.EvaluateStatement:
LOAD LITERAL `2`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$message`
LOAD LITERAL `"Something serious happened."`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
LOAD LITERAL `$exception`
LOAD VARIABLE $exception
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
STORE VARIABLE $exception

1.5.2.ThrowStatement:
LOAD VARIABLE $exception
STORE VARIABLE $_exception_
JUMP TO 1.5.3.BlockEnd

1.5.3.BlockEnd:
LOAD LITERAL `none`
STORE VARIABLE $_exception_

1.5.ClauseEnd:
SKIP INSTRUCTION

1.FinalClause:
SKIP INSTRUCTION

1.6.1.QueueStatement:
LOAD LITERAL `<bali:/#RSTMWSC0HFY00QJP37QD3JA533NLKPP5v3.1>`
STORE VARIABLE $_queue_21
LOAD LITERAL `4`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD VARIABLE $foo
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
LOAD VARIABLE $bar
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
LOAD VARIABLE $baz
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
LOAD LITERAL `5`
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
STORE MESSAGE $_queue_21

1.6.2.PublishStatement:
LOAD LITERAL `2`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$type`
LOAD LITERAL `$confirmation`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
LOAD LITERAL `$timestamp`
LOAD VARIABLE $type
LOAD LITERAL `0`
INVOKE INTRINSIC $array WITH PARAMETER
EXECUTE METHOD $now WITH PARAMETERS
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
STORE MESSAGE $_eventQueue_

1.6.3.BlockEnd:
SKIP INSTRUCTION

2.WhileStatement:
LOAD LITERAL `true`
STORE VARIABLE $_continue_2_1_Outer

2.1.Outer:
LOAD VARIABLE $_continue_2_1_Outer
LOAD LITERAL `true`
INVOKE INTRINSIC $and WITH 2 PARAMETERS
JUMP TO 2.FinalClause ON FALSE

2.1.1.EvaluateStatement:
LOAD VARIABLE $bar
STORE VARIABLE $foo

2.1.2.IfStatement:
SKIP INSTRUCTION

2.1.2.1.IfCondition:
LOAD VARIABLE $foo
JUMP TO 2.1.2.2.ElseClause ON FALSE

2.1.2.1.1.BreakStatement:
LOAD LITERAL `false`
STORE VARIABLE $_continue_2_1_Outer
JUMP TO 2.1.2.1.2.BlockEnd

2.1.2.1.2.BlockEnd:
JUMP TO 2.1.2.FinalClause

2.1.2.2.ElseClause:
SKIP INSTRUCTION

2.1.2.2.1.WithStatement:
LOAD VARIABLE $sequence
STORE VARIABLE $_sequence_24
LOAD VARIABLE $_sequence_24
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_sequenceType_25
LOAD VARIABLE $_sequenceType_25
LOAD VARIABLE $_sequence_24
EXECUTE METHOD $createIterator WITH TARGET
STORE VARIABLE $_iterator_26
LOAD VARIABLE $_iterator_26
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_iteratorType_27
LOAD LITERAL `true`
STORE VARIABLE $_continue_2_1_2_2_1_1_WithItem

2.1.2.2.1.1.WithItem:
LOAD VARIABLE $_continue_2_1_2_2_1_1_WithItem
LOAD VARIABLE $_iteratorType_27
LOAD VARIABLE $_iterator_26
EXECUTE METHOD $hasNext WITH TARGET
INVOKE INTRINSIC $and WITH 2 PARAMETERS
JUMP TO 2.1.2.2.1.FinalClause ON FALSE
LOAD VARIABLE $_iteratorType_27
LOAD VARIABLE $_iterator_26
EXECUTE METHOD $getNext WITH TARGET
STORE VARIABLE $item

2.1.2.2.1.1.1.SelectStatement:
LOAD VARIABLE $selection
STORE VARIABLE $_selection_28

2.1.2.2.1.1.1.1.SelectOption:
LOAD VARIABLE $_selection_28
LOAD LITERAL `$first`
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
JUMP TO 2.1.2.2.1.1.1.2SelectOption ON FALSE

2.1.2.2.1.1.1.1.1.EvaluateStatement:
LOAD LITERAL `true`
STORE VARIABLE $_result_

2.1.2.2.1.1.1.1.2.BlockEnd:
JUMP TO 2.1.2.2.1.1.1.FinalClause

2.1.2.2.1.1.1.2.SelectOption:
LOAD VARIABLE $_selection_28
LOAD LITERAL `$second`
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
JUMP TO 2.1.2.2.1.1.1.3.ElseClause ON FALSE

2.1.2.2.1.1.1.2.1.EvaluateStatement:
LOAD LITERAL `false`
STORE VARIABLE $_result_

2.1.2.2.1.1.1.2.2.BlockEnd:
JUMP TO 2.1.2.2.1.1.1.FinalClause

2.1.2.2.1.1.1.3.ElseClause:
SKIP INSTRUCTION

2.1.2.2.1.1.1.3.1.ContinueStatement:
LOAD LITERAL `false`
STORE VARIABLE $_continue_2_1_2_2_1_1_WithItem
JUMP TO 2.1.2.2.1.1.1.3.2.BlockEnd

2.1.2.2.1.1.1.3.2.BlockEnd:
SKIP INSTRUCTION

2.1.2.2.1.1.1.FinalClause:
SKIP INSTRUCTION

2.1.2.2.1.1.1.4.1.EvaluateStatement:
LOAD LITERAL `$selectDone`
STORE VARIABLE $_result_

2.1.2.2.1.1.1.4.2.BlockEnd:
SKIP INSTRUCTION

2.1.2.2.1.1.2.BlockEnd:
JUMP TO 2.1.2.2.1.1.WithItem

2.1.2.2.1.FinalClause:
SKIP INSTRUCTION

2.1.2.2.1.2.1.EvaluateStatement:
LOAD LITERAL `$innerDone`
STORE VARIABLE $_result_

2.1.2.2.1.2.2.BlockEnd:
SKIP INSTRUCTION

2.1.2.2.2.BlockEnd:
SKIP INSTRUCTION

2.1.2.FinalClause:
SKIP INSTRUCTION

2.1.2.3.1.EvaluateStatement:
LOAD LITERAL `$ifDone`
STORE VARIABLE $_result_

2.1.2.3.2.BlockEnd:
SKIP INSTRUCTION

2.1.3.BlockEnd:
JUMP TO 2.1.Outer

2.FinalClause:
SKIP INSTRUCTION

2.2.1.EvaluateStatement:
LOAD LITERAL `$outerDone`
STORE VARIABLE $_result_

2.2.2.BlockEnd:
SKIP INSTRUCTION

3.BlockEnd:
SKIP INSTRUCTION

