
1.EvaluateStatement:
LOAD LITERAL `2`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$foo`
LOAD VARIABLE $bar
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
LOAD LITERAL `$baz`
LOAD LITERAL `5`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
STORE VARIABLE $_result_

2.EvaluateStatement:
LOAD VARIABLE $variable
STORE VARIABLE $_result_

3.EvaluateStatement:
LOAD VARIABLE $type
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD LITERAL `13`
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
EXECUTE METHOD $isPrime WITH PARAMETERS
STORE VARIABLE $_result_

4.EvaluateStatement:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $sum WITH 2 PARAMETERS
LOAD VARIABLE $c
INVOKE INTRINSIC $product WITH 2 PARAMETERS
STORE VARIABLE $_result_

5.EvaluateStatement:
LOAD VARIABLE $reference
STORE VARIABLE $_reference_11
LOAD DOCUMENT $_reference_11
STORE VARIABLE $_result_

6.EvaluateStatement:
LOAD VARIABLE $customer
STORE VARIABLE $_component_14
LOAD VARIABLE $_component_14
LOAD LITERAL `$order`
STORE VARIABLE $_index_15
LOAD VARIABLE $_component_14
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_type_16
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD VARIABLE $_index_15
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
STORE VARIABLE $_parameters_17
LOAD VARIABLE $_type_16
LOAD VARIABLE $_component_14
LOAD VARIABLE $_parameters_17
EXECUTE METHOD $getValue WITH TARGET AND PARAMETERS
STORE VARIABLE $_component_14
LOAD VARIABLE $_component_14
LOAD LITERAL `$item`
STORE VARIABLE $_index_18
LOAD VARIABLE $_component_14
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_type_19
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD VARIABLE $_index_18
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
STORE VARIABLE $_parameters_20
LOAD VARIABLE $_type_19
LOAD VARIABLE $_component_14
LOAD VARIABLE $_parameters_20
EXECUTE METHOD $getValue WITH TARGET AND PARAMETERS
STORE VARIABLE $_component_14
LOAD VARIABLE $_component_14
LOAD LITERAL `5`
INVOKE INTRINSIC $getValue WITH 2 PARAMETERS
STORE VARIABLE $_result_

7.EvaluateStatement:
LOAD VARIABLE $list
STORE VARIABLE $_target_24
LOAD VARIABLE $_target_24
INVOKE INTRINSIC $getType WITH PARAMETER
STORE VARIABLE $_type_25
LOAD VARIABLE $_type_25
LOAD VARIABLE $_target_24
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD VARIABLE $item
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
EXECUTE METHOD $addItem WITH TARGET AND PARAMETERS
STORE VARIABLE $_result_

8.EvaluateStatement:
LOAD LITERAL `23`
INVOKE INTRINSIC $factorial WITH PARAMETER
STORE VARIABLE $_result_

9.EvaluateStatement:
LOAD LITERAL `2`
LOAD LITERAL `8`
INVOKE INTRINSIC $exponential WITH 2 PARAMETERS
STORE VARIABLE $_result_

10.EvaluateStatement:
LOAD LITERAL `pi`
INVOKE INTRINSIC $negative WITH PARAMETER
STORE VARIABLE $_result_

11.EvaluateStatement:
LOAD LITERAL `5`
INVOKE INTRINSIC $inverse WITH PARAMETER
STORE VARIABLE $_result_

12.EvaluateStatement:
LOAD LITERAL `(3, 4i)`
INVOKE INTRINSIC $conjugate WITH PARAMETER
STORE VARIABLE $_result_

13.EvaluateStatement:
LOAD VARIABLE $x
LOAD VARIABLE $y
INVOKE INTRINSIC $product WITH 2 PARAMETERS
STORE VARIABLE $_result_

14.EvaluateStatement:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $quotient WITH 2 PARAMETERS
STORE VARIABLE $_result_

15.EvaluateStatement:
LOAD VARIABLE $c
LOAD VARIABLE $d
INVOKE INTRINSIC $remainder WITH 2 PARAMETERS
STORE VARIABLE $_result_

16.EvaluateStatement:
LOAD VARIABLE $x
LOAD VARIABLE $y
INVOKE INTRINSIC $sum WITH 2 PARAMETERS
STORE VARIABLE $_result_

17.EvaluateStatement:
LOAD VARIABLE $w
LOAD VARIABLE $z
INVOKE INTRINSIC $difference WITH 2 PARAMETERS
STORE VARIABLE $_result_

18.EvaluateStatement:
LOAD LITERAL `(3, 4i)`
INVOKE INTRINSIC $magnitude WITH PARAMETER
STORE VARIABLE $_result_

19.EvaluateStatement:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $less WITH 2 PARAMETERS
STORE VARIABLE $_result_

20.EvaluateStatement:
LOAD VARIABLE $c
LOAD VARIABLE $d
INVOKE INTRINSIC $equal WITH 2 PARAMETERS
STORE VARIABLE $_result_

21.EvaluateStatement:
LOAD VARIABLE $f
LOAD VARIABLE $g
INVOKE INTRINSIC $more WITH 2 PARAMETERS
STORE VARIABLE $_result_

22.EvaluateStatement:
LOAD VARIABLE $h
LOAD VARIABLE $j
INVOKE INTRINSIC $is WITH 2 PARAMETERS
STORE VARIABLE $_result_

23.EvaluateStatement:
LOAD VARIABLE $k
LOAD VARIABLE $m
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
STORE VARIABLE $_result_

24.EvaluateStatement:
LOAD VARIABLE $p
INVOKE INTRINSIC $complement WITH PARAMETER
STORE VARIABLE $_result_

25.EvaluateStatement:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $and WITH 2 PARAMETERS
STORE VARIABLE $_result_

26.EvaluateStatement:
LOAD VARIABLE $c
LOAD VARIABLE $d
INVOKE INTRINSIC $sans WITH 2 PARAMETERS
STORE VARIABLE $_result_

27.EvaluateStatement:
LOAD VARIABLE $f
LOAD VARIABLE $g
INVOKE INTRINSIC $xor WITH 2 PARAMETERS
STORE VARIABLE $_result_

28.EvaluateStatement:
LOAD VARIABLE $h
LOAD VARIABLE $j
INVOKE INTRINSIC $or WITH 2 PARAMETERS
STORE VARIABLE $_result_

29.EvaluateStatement:
LOAD VARIABLE $foo
LOAD LITERAL `5`
INVOKE INTRINSIC $default WITH 2 PARAMETERS
STORE VARIABLE $_result_

30.BlockEnd:
SKIP INSTRUCTION

