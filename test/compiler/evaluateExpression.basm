
1.EvaluateClause:
LOAD LITERAL `2`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$foo`
LOAD VARIABLE $bar
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
LOAD LITERAL `$baz`
LOAD LITERAL `5`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
STORE VARIABLE $_result_

2.EvaluateClause:
LOAD VARIABLE $variable
STORE VARIABLE $_result_

3.EvaluateClause:
LOAD LITERAL `<bali:/bali/types/SomeType>`
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD LITERAL `13`
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
EXECUTE PROCEDURE $isPrime WITH PARAMETERS
STORE VARIABLE $_result_

4.EvaluateClause:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $sum WITH 2 PARAMETERS
LOAD VARIABLE $c
INVOKE INTRINSIC $product WITH 2 PARAMETERS
STORE VARIABLE $_result_

5.EvaluateClause:
LOAD VARIABLE $reference
STORE VARIABLE $_location_1
LOAD DOCUMENT $_location_1
STORE VARIABLE $_result_

6.EvaluateClause:
LOAD VARIABLE $customer
LOAD LITERAL `$order`
INVOKE INTRINSIC $getValue WITH 2 PARAMETERS
LOAD LITERAL `$item`
INVOKE INTRINSIC $getValue WITH 2 PARAMETERS
LOAD LITERAL `5`
INVOKE INTRINSIC $getValue WITH 2 PARAMETERS
STORE VARIABLE $_result_

7.EvaluateClause:
LOAD VARIABLE $list
LOAD LITERAL `1`
INVOKE INTRINSIC $array WITH PARAMETER
LOAD VARIABLE $item
INVOKE INTRINSIC $addItem WITH 2 PARAMETERS
EXECUTE PROCEDURE $addItem ON TARGET WITH PARAMETERS
STORE VARIABLE $_result_

8.EvaluateClause:
LOAD LITERAL `23`
INVOKE INTRINSIC $factorial WITH PARAMETER
STORE VARIABLE $_result_

9.EvaluateClause:
LOAD LITERAL `2`
LOAD LITERAL `8`
INVOKE INTRINSIC $exponential WITH 2 PARAMETERS
STORE VARIABLE $_result_

10.EvaluateClause:
LOAD LITERAL `-pi`
STORE VARIABLE $_result_

11.EvaluateClause:
LOAD LITERAL `5`
INVOKE INTRINSIC $inverse WITH PARAMETER
STORE VARIABLE $_result_

12.EvaluateClause:
LOAD LITERAL `(3, 4i)`
INVOKE INTRINSIC $conjugate WITH PARAMETER
STORE VARIABLE $_result_

13.EvaluateClause:
LOAD VARIABLE $x
LOAD VARIABLE $y
INVOKE INTRINSIC $product WITH 2 PARAMETERS
STORE VARIABLE $_result_

14.EvaluateClause:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $quotient WITH 2 PARAMETERS
STORE VARIABLE $_result_

15.EvaluateClause:
LOAD VARIABLE $c
LOAD VARIABLE $d
INVOKE INTRINSIC $remainder WITH 2 PARAMETERS
STORE VARIABLE $_result_

16.EvaluateClause:
LOAD VARIABLE $x
LOAD VARIABLE $y
INVOKE INTRINSIC $sum WITH 2 PARAMETERS
STORE VARIABLE $_result_

17.EvaluateClause:
LOAD VARIABLE $w
LOAD VARIABLE $z
INVOKE INTRINSIC $difference WITH 2 PARAMETERS
STORE VARIABLE $_result_

18.EvaluateClause:
LOAD LITERAL `(3, 4i)`
INVOKE INTRINSIC $magnitude WITH PARAMETER
STORE VARIABLE $_result_

19.EvaluateClause:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $less WITH 2 PARAMETERS
STORE VARIABLE $_result_

20.EvaluateClause:
LOAD VARIABLE $c
LOAD VARIABLE $d
INVOKE INTRINSIC $equal WITH 2 PARAMETERS
STORE VARIABLE $_result_

21.EvaluateClause:
LOAD VARIABLE $f
LOAD VARIABLE $g
INVOKE INTRINSIC $more WITH 2 PARAMETERS
STORE VARIABLE $_result_

22.EvaluateClause:
LOAD VARIABLE $h
LOAD VARIABLE $j
INVOKE INTRINSIC $is WITH 2 PARAMETERS
STORE VARIABLE $_result_

23.EvaluateClause:
LOAD VARIABLE $k
LOAD VARIABLE $m
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
STORE VARIABLE $_result_

24.EvaluateClause:
LOAD VARIABLE $p
INVOKE INTRINSIC $complement WITH PARAMETER
STORE VARIABLE $_result_

25.EvaluateClause:
LOAD VARIABLE $a
LOAD VARIABLE $b
INVOKE INTRINSIC $and WITH 2 PARAMETERS
STORE VARIABLE $_result_

26.EvaluateClause:
LOAD VARIABLE $c
LOAD VARIABLE $d
INVOKE INTRINSIC $sans WITH 2 PARAMETERS
STORE VARIABLE $_result_

27.EvaluateClause:
LOAD VARIABLE $f
LOAD VARIABLE $g
INVOKE INTRINSIC $xor WITH 2 PARAMETERS
STORE VARIABLE $_result_

28.EvaluateClause:
LOAD VARIABLE $h
LOAD VARIABLE $j
INVOKE INTRINSIC $or WITH 2 PARAMETERS
STORE VARIABLE $_result_

29.EvaluateClause:
LOAD VARIABLE $foo
LOAD LITERAL `5`
INVOKE INTRINSIC $default WITH 2 PARAMETERS
STORE VARIABLE $_result_

30.BlockEnd:
SKIP INSTRUCTION

