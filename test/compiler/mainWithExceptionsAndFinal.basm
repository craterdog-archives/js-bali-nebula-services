
1.QueueStatement:
LOAD LITERAL `<bali:/queues/myqueue>`
STORE VARIABLE $_queue_1
LOAD VARIABLE $message
STORE MESSAGE $_queue_1

1.HandleClauses:
LOAD VARIABLE $_exception_
JUMP TO 1.FinishClause ON NONE
LOAD VARIABLE $_exception_

1.1.HandleClause:
STORE VARIABLE $error
LOAD VARIABLE $error
LOAD LITERAL `1`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$type`
LOAD LITERAL `'bad'`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
JUMP TO 1.1.ClauseEnd ON FALSE

1.1.1.EvaluateStatement:
LOAD LITERAL `any`
STORE VARIABLE $_result_

1.1.2.BlockEnd:
LOAD LITERAL `none`
STORE VARIABLE $_exception_

1.1.ClauseEnd:
LOAD VARIABLE $_exception_
JUMP TO 1.FinishClause ON NONE
LOAD VARIABLE $_exception_

1.2.HandleClause:
STORE VARIABLE $error
LOAD VARIABLE $error
LOAD LITERAL `1`
INVOKE INTRINSIC $table WITH PARAMETER
LOAD LITERAL `$type`
LOAD LITERAL `'horrid'`
INVOKE INTRINSIC $setValue WITH 3 PARAMETERS
INVOKE INTRINSIC $matches WITH 2 PARAMETERS
JUMP TO 1.2.ClauseEnd ON FALSE

1.2.1.EvaluateStatement:
LOAD LITERAL `none`
STORE VARIABLE $_result_

1.2.2.BlockEnd:
LOAD LITERAL `none`
STORE VARIABLE $_exception_

1.2.ClauseEnd:
SKIP INSTRUCTION

1.FinishClause:
SKIP INSTRUCTION

1.3.1.EvaluateStatement:
LOAD LITERAL `true`
STORE VARIABLE $_result_

1.3.2.BlockEnd:
SKIP INSTRUCTION

2.BlockEnd:
SKIP INSTRUCTION

