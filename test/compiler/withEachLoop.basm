
1.WithStatement:
LOAD LITERAL `$sequence`
INVOKE INTRINSIC $createIterator WITH PARAMETER
STORE VARIABLE $_iterator_1
LOAD LITERAL `true`
STORE VARIABLE $_continue_1_1_WithItem

1.1.1.1.WithItem:
LOAD VARIABLE $_continue_1_1_WithItem
LOAD VARIABLE $_iterator_1
INVOKE INTRINSIC $hasNext WITH PARAMETER
INVOKE INTRINSIC $and WITH 2 PARAMETERS
JUMP TO 1.FinishClause ON FALSE
LOAD VARIABLE $_iterator_1
INVOKE INTRINSIC $getNext WITH PARAMETER
STORE VARIABLE $symbol

1.1.1.EvaluateStatement:
LOAD LITERAL `true`
STORE VARIABLE $x

1.1.2.IfStatement:
SKIP INSTRUCTION

1.1.2.1.ConditionClause:
LOAD VARIABLE $x
JUMP TO 1.1.2.FinishClause ON FALSE

1.1.2.1.1.EvaluateStatement:
LOAD LITERAL `none`
STORE VARIABLE $y

1.1.2.1.2.ContinueStatement:
JUMP TO 1.1.2.1.3.BlockEnd

1.1.2.1.3.BlockEnd:
SKIP INSTRUCTION

1.1.2.FinishClause:
SKIP INSTRUCTION

1.1.3.EvaluateStatement:
LOAD LITERAL `any`
STORE VARIABLE $z

1.1.4.BlockEnd:
JUMP TO 1.1.WithItem

1.FinishClause:
SKIP INSTRUCTION

2.BlockEnd:
SKIP INSTRUCTION

